<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config/>
    <!-- 自动扫描 的包，service层-->
    <context:component-scan base-package="com.newview.bysj.service"/>
    <!-- 配置数据源 -->
    <context:property-placeholder location="classpath:/db.properties"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!--连接数据库的驱动-->
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <!--数据库的路径-->
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <!--连接数据库的用户名-->
        <property name="username" value="${jdbc.user}"/>
        <!--连接数据库的密码-->
        <property name="password" value="${jdbc.password}"/>
        <!--每次从连接池中取出连接是否要进行sql测试 如果为true，则会很影响性能  -->
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="true"/>

        <property name="testWhileIdle" value="true"/>

        <property name="validationQuery" value="SELECT 1"/>

        <!--检查无效连接的时间间隔-->
        <property name="timeBetweenEvictionRunsMillis" value="30000"/>
        <!--连接池中的最小连接数-->
        <property name="minIdle" value="10"/>
        <!--在tomcat启动时会创建5条连接，-->
        <property name="initialSize" value="5"/>
        <!--最大空闲连接数-->
        <property name="maxIdle" value="60"/>
        <!--最大活动连接数-->
        <property name="maxActive" value="80"/>
        <!--连接闲置的时间 30分钟-->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>

    </bean>
    <!-- 配置entityManager -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--配置数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--扫描的实体类包-->
        <property name="packagesToScan" value="com.newview.bysj.domain"/>
        <!-- 配置jpa提供商的适配器，内部bean的方式来配置 -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="MYSQL"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
        <!-- jpa的实现产品hibernate -->
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence"/>
        </property>
        <!-- jpa方言 -->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.hbm2ddl.auto" value="update"/>
            </map>
        </property>
    </bean>
    <!-- 配置jpa使用的事物管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <jpa:repositories base-package="com.newview.bysj.dao"
                      entity-manager-factory-ref="entityManagerFactory"
                      factory-class="com.newview.bysj.jpaRepository.MyRepositoryFactoryBean"
                      transaction-manager-ref="transactionManager"/>
    <!-- 配置基于注解的事物支持 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>